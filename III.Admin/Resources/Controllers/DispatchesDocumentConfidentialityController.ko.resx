<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DDC_CURE_LBL_CODE" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDC_CURE_LBL_NAME" xml:space="preserve">
    <value>비밀 이름</value>
    <comment>Tên độ mật</comment>
  </data>
  <data name="DDC_CURE_TXT_CODE" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDC_CURE_TXT_NAME" xml:space="preserve">
    <value>비밀 이름</value>
    <comment>Tên độ mật</comment>
  </data>
  <data name="DDC_ERR_COCUMENT_REFESH" xml:space="preserve">
    <value>비밀 수준이 존재하지 않습니다. 페이지를 새로 고침하십시오.</value>
    <comment>Độ mật không tồn tại, vui lòng làm mới trang</comment>
  </data>
  <data name="DDC_ERR_COCUMENT_REFESH1" xml:space="preserve">
    <value>비밀 수준이 존재하지 않습니다. 페이지를 새로 고침하십시오.</value>
    <comment>Độ mật không tồn tại, vui lòng làm mới trang</comment>
  </data>
  <data name="DDC_ERR_CODE_NOT_DDC" xml:space="preserve">
    <value>다른 기밀로 사용되는 암호 코드입니다. 다시 시도하십시오!</value>
    <comment>Mã độ mật đã dùng cho độ mật khác, vui lòng thử lại!</comment>
  </data>
  <data name="DDC_ERR_DOCUMENT_CODE" xml:space="preserve">
    <value>이 비밀은 이미 존재합니다. 다른 코드를 입력하십시오!</value>
    <comment>Độ mật này đã tồn tại, vui lòng nhập mã khác!</comment>
  </data>
  <data name="DDC_ERR_DOCUMENT_EXIST" xml:space="preserve">
    <value>기밀은 이미 교과서에 있습니다!</value>
    <comment>Độ mật đã tồn tại trong sổ văn bản đi!</comment>
  </data>
  <data name="DDC_LINK_DDC" xml:space="preserve">
    <value>기밀 유지</value>
    <comment>Sổ văn bản</comment>
  </data>
  <data name="DDC_LINK_HOME" xml:space="preserve">
    <value>홈</value>
    <comment>Trang chủ</comment>
  </data>
  <data name="DDC_LIST_COL_ACTION" xml:space="preserve">
    <value>액션</value>
    <comment>Tác vụ</comment>
  </data>
  <data name="DDC_LIST_COL_CODE" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDC_LIST_COL_NAME" xml:space="preserve">
    <value>비밀 이름</value>
    <comment>Tên độ mật</comment>
  </data>
  <data name="DDC_MSG_CHARACTER" xml:space="preserve">
    <value>기호에는 문자와 숫자가 포함되며 특수 문자는 포함되지 않습니다.</value>
    <comment>Ký hiệu bao gồm chữ cái và số và không bao gồm ký tự đặc biệt</comment>
  </data>
  <data name="DDC_MSG_NO_BLANK_CODE" xml:space="preserve">
    <value>기호는 비워 둘 수 없습니다.</value>
    <comment>Vui lòng chọn bản ghi để xóa</comment>
  </data>
  <data name="DDC_MSG_NO_BLANK_NAME" xml:space="preserve">
    <value>기밀 이름은 비워 둘 수 없습니다.</value>
    <comment>Mã số</comment>
  </data>
  <data name="DDC_MSG_TITLE_DDC" xml:space="preserve">
    <value>기밀 유지</value>
    <comment>độ mật</comment>
  </data>
  <data name="DDC_TITLE_ADD_DDC" xml:space="preserve">
    <value>기밀 유지</value>
    <comment>Thêm độ mật</comment>
  </data>
  <data name="DDC_TITLE_DDC" xml:space="preserve">
    <value>기밀 유지</value>
    <comment>Sổ văn bản</comment>
  </data>
  <data name="DDC_TITLE_DDC_CATEGORY" xml:space="preserve">
    <value>기밀 유지 목록</value>
    <comment>Danh mục độ mật</comment>
  </data>
  <data name="DDC_TITLE_EDIT_DDC" xml:space="preserve">
    <value>기밀 유지</value>
    <comment>Cập nhật sổ văn bản</comment>
  </data>
</root>