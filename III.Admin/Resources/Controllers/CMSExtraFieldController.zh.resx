<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CEF_CL_GROUP" xml:space="preserve">
    <value>组别</value>
    <comment>Nhóm.</comment>
  </data>
  <data name="CEF_CL_GROUP_NOT_BLANK" xml:space="preserve">
    <value>组不能为空</value>
    <comment>Nhóm không được để trống</comment>
  </data>
  <data name="CEF_CL_NAME" xml:space="preserve">
    <value>名字</value>
    <comment>Tên.</comment>
  </data>
  <data name="CEF_CL_ORDERING" xml:space="preserve">
    <value>准备好的</value>
    <comment>Chuẩn bị.</comment>
  </data>
  <data name="CEF_CL_TYPE" xml:space="preserve">
    <value>类型。</value>
    <comment>Loại.</comment>
  </data>
  <data name="CEF_CL_TYPE_NOT_BLANK" xml:space="preserve">
    <value>类型不能为空</value>
    <comment>Loại không được để trống</comment>
  </data>
  <data name="CEF_CURE_LBL_NAME" xml:space="preserve">
    <value>名字</value>
    <comment>Tên.</comment>
  </data>
  <data name="CEF_CURE_LBL_PUBLISHED" xml:space="preserve">
    <value>显示。</value>
    <comment>Hiển thị.</comment>
  </data>
  <data name="CEF_CURE_TITLE_EF" xml:space="preserve">
    <value>编辑其他字段。</value>
    <comment>Chỉnh sửa trường bổ sung.</comment>
  </data>
  <data name="CEF_CURE_TITLE_EF_ADD" xml:space="preserve">
    <value>添加其他字段。</value>
    <comment>Thêm các lĩnh vực bổ sung.</comment>
  </data>
  <data name="CEF_CURE_TXT_NAME_PLACEHOLDER" xml:space="preserve">
    <value>添加名称。</value>
    <comment>Thêm một tên.</comment>
  </data>
  <data name="CEF_CURE_TXT_ORDERING" xml:space="preserve">
    <value>准备好的</value>
    <comment>Chuẩn bị.</comment>
  </data>
  <data name="CEF_CURE_TXT_VALUE_NAME_GROUP" xml:space="preserve">
    <value>组名。</value>
    <comment>Tên nhóm.</comment>
  </data>
  <data name="CEF_LBL_GROUP" xml:space="preserve">
    <value>组别</value>
    <comment>Nhóm.</comment>
  </data>
  <data name="CEF_LBL_LIST_EF" xml:space="preserve">
    <value>其他字段列表。</value>
    <comment>Danh sách các lĩnh vực bổ sung.</comment>
  </data>
  <data name="CEF_LBL_TITLE" xml:space="preserve">
    <value>职称</value>
    <comment>Tiêu đề</comment>
  </data>
  <data name="CEF_LBL_TYPE" xml:space="preserve">
    <value>类型。</value>
    <comment>Loại.</comment>
  </data>
  <data name="CEF_MSG_ADD_EF_SUCCESS" xml:space="preserve">
    <value>添加更多字段已成功添加。</value>
    <comment>Thêm trường được thêm thành công.</comment>
  </data>
  <data name="CEF_MSG_ADD_ERR" xml:space="preserve">
    <value>添加时是否有任何错误？</value>
    <comment>Có bất kỳ lỗi khi thêm?</comment>
  </data>
  <data name="CEF_MSG_DELETE" xml:space="preserve">
    <value>您确定要删除吗？</value>
    <comment>Bạn có chắc chắn muốn xóa?</comment>
  </data>
  <data name="CEF_MSG_DELETE_ERR" xml:space="preserve">
    <value>删除时发生错误！</value>
    <comment>Đã xảy ra lỗi khi xóa!</comment>
  </data>
  <data name="CEF_MSG_DELETE_SUCCESS" xml:space="preserve">
    <value>删除成功。</value>
    <comment>Xóa thành công.</comment>
  </data>
  <data name="CEF_MSG_EDIT_EF_SUCCESS" xml:space="preserve">
    <value>成功更新了其他字段。</value>
    <comment>Cập nhật thành công các lĩnh vực bổ sung.</comment>
  </data>
  <data name="CEF_MSG_EDIT_ERR" xml:space="preserve">
    <value>更新时发生错误！</value>
    <comment>Một lỗi đã xảy ra trong khi cập nhật!</comment>
  </data>
  <data name="CEF_MSG_TITLE_ERR" xml:space="preserve">
    <value>需要至少一个字符或数字的类型代码，并且不包括空格字符！</value>
    <comment>Yêu cầu mã loại có ít nhất một ký tự hoặc số và không bao gồm ký tự khoảng trắng!</comment>
  </data>
  <data name="CEF_MSG_TITLE_NAME_EF" xml:space="preserve">
    <value>当前名称！</value>
    <comment>Tên hiện tại!</comment>
  </data>
  <data name="CEF_TITLE_LIST_EF" xml:space="preserve">
    <value>其他字段列表。</value>
    <comment>Danh sách các lĩnh vực bổ sung.</comment>
  </data>
  <data name="CEF_TXT_GROUP" xml:space="preserve">
    <value>组别</value>
    <comment>Nhóm.</comment>
  </data>
  <data name="CEF_TXT_NAME_PLACEHOLDER_ADDTITLE" xml:space="preserve">
    <value>输入标题...</value>
    <comment>Nhập một tiêu đề ...</comment>
  </data>
  <data name="CEF_TXT_NAME_TYPE" xml:space="preserve">
    <value>类型。</value>
    <comment>Loại.</comment>
  </data>
</root>