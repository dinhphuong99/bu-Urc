<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VX_CRUD_CODE_EXIST" xml:space="preserve">
    <value>Code already exists</value>
    <comment>Code already exists</comment>
  </data>
  <data name="VX_CRUD_EDIT_EXIST" xml:space="preserve">
    <value>Edit service information successfully</value>
    <comment>Edit service information successfully</comment>
  </data>
  <data name="VX_CRUD_LOCK_EXIST" xml:space="preserve">
    <value>Successful lock!</value>
    <comment>Successful lock!</comment>
  </data>
  <data name="VX_CRUD_NEW_EXIST" xml:space="preserve">
    <value>Add new successful supplies</value>
    <comment>Add new successful supplies</comment>
  </data>
  <data name="VX_CRUD_NEW_SERVICE_EXIST" xml:space="preserve">
    <value>Add new service successfully</value>
    <comment>Add new service successfully</comment>
  </data>
  <data name="VX_MG_ACT" xml:space="preserve">
    <value>Work</value>
    <comment>Work</comment>
  </data>
  <data name="VX_MG_ADD" xml:space="preserve">
    <value>Add new supplies</value>
    <comment>Add new supplies</comment>
  </data>
  <data name="VX_MG_ADD_ATR" xml:space="preserve">
    <value>Add new properties</value>
    <comment>Add new properties</comment>
  </data>
  <data name="VX_MG_ADD_FILE" xml:space="preserve">
    <value>Add new file</value>
    <comment>Add new file</comment>
  </data>
  <data name="VX_MG_DEACT" xml:space="preserve">
    <value>Stop working</value>
    <comment>Stop working</comment>
  </data>
  <data name="VX_MG_EDIT" xml:space="preserve">
    <value>Edit information</value>
    <comment>Edit information</comment>
  </data>
  <data name="VX_MG_EDIT_ATR" xml:space="preserve">
    <value>Edit information</value>
    <comment>Edit information</comment>
  </data>
  <data name="VX_MG_EDIT_FILE" xml:space="preserve">
    <value>Edit information</value>
    <comment>Edit information</comment>
  </data>
  <data name="VX_MG_FILE" xml:space="preserve">
    <value>File</value>
    <comment>File</comment>
  </data>
  <data name="VX_MG_LBL_AVATAR" xml:space="preserve">
    <value>Avatar</value>
    <comment>Avatar</comment>
  </data>
  <data name="VX_MG_LBL_FILE_NAME" xml:space="preserve">
    <value>File name</value>
    <comment>File name</comment>
  </data>
  <data name="VX_MG_LBL_IMG" xml:space="preserve">
    <value>Image</value>
    <comment>Image</comment>
  </data>
  <data name="VX_MG_LBL_LANGUAGE" xml:space="preserve">
    <value>Language</value>
    <comment>Language</comment>
  </data>
  <data name="VX_MG_LBL_NOTE" xml:space="preserve">
    <value>Note</value>
    <comment>Note</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY" xml:space="preserve">
    <value>Properties</value>
    <comment>Properties</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY_NAME" xml:space="preserve">
    <value>Property name</value>
    <comment>Property name</comment>
  </data>
  <data name="VX_MG_LBL_QR_CODE" xml:space="preserve">
    <value>Barcode</value>
    <comment>Barcode</comment>
  </data>
  <data name="VX_MG_LBL_ST_STATUS" xml:space="preserve">
    <value>Status</value>
    <comment>Status</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_CODE" xml:space="preserve">
    <value>Material code</value>
    <comment>Material code</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_GR" xml:space="preserve">
    <value>Materials group</value>
    <comment>Materials group</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_NAME" xml:space="preserve">
    <value>Name supplies</value>
    <comment>Name supplies</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_TYPE" xml:space="preserve">
    <value>Type of material</value>
    <comment>Type of material</comment>
  </data>
  <data name="VX_MG_LBL_VALUE" xml:space="preserve">
    <value>Value</value>
    <comment>Value</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE" xml:space="preserve">
    <value>Are you sure to lock this item?</value>
    <comment>Are you sure to lock this item?</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_CANCLE" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_TITLE" xml:space="preserve">
    <value>Confirm</value>
    <comment>Confirm</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_LIST" xml:space="preserve">
    <value>Are you sure you want to lock these selected items</value>
    <comment>Are you sure you want to lock these selected items</comment>
  </data>
  <data name="VX_MG_NAME" xml:space="preserve">
    <value>List of supplies</value>
    <comment>List of supplies</comment>
  </data>
  <data name="VX_MG_SUPPLY_CODE" xml:space="preserve">
    <value>material code.</value>
    <comment>material code.</comment>
  </data>
  <data name="VX_MG_SUPPLY_NAME" xml:space="preserve">
    <value>name supplies.</value>
    <comment>name supplies.</comment>
  </data>
  <data name="VX_MG_SUPPLY_TITLE" xml:space="preserve">
    <value>Title</value>
    <comment>Title</comment>
  </data>
  <data name="VX_MG_TOUR_TODAY" xml:space="preserve">
    <value>REGISTRATION TRIPS TO TODAY</value>
    <comment>REGISTRATION TRIPS TO TODAY</comment>
  </data>
  <data name="VX_MG_TXT_CHOOSE_STT" xml:space="preserve">
    <value>select status ...</value>
    <comment>select status ...</comment>
  </data>
  <data name="VX_MG_TXT_FILE_NAME" xml:space="preserve">
    <value>File name ...</value>
    <comment>File name ...</comment>
  </data>
  <data name="VX_MG_TXT_FULLNAME" xml:space="preserve">
    <value>First and last name..</value>
    <comment>First and last name..</comment>
  </data>
  <data name="VX_MG_TXT_NOTE" xml:space="preserve">
    <value>Note..</value>
    <comment>Note..</comment>
  </data>
  <data name="VX_MG_TXT_PROPERTY" xml:space="preserve">
    <value>Properties...</value>
    <comment>Properties...</comment>
  </data>
  <data name="VX_MG_TXT_QR_CODE" xml:space="preserve">
    <value>Barcode...</value>
    <comment>Barcode...</comment>
  </data>
  <data name="VX_MG_TXT_SEARCH_SUPPLY_NAME" xml:space="preserve">
    <value>Find supplies name ...</value>
    <comment>Find supplies name ...</comment>
  </data>
  <data name="VX_MG_TXT_ST_STATUS" xml:space="preserve">
    <value>Status...</value>
    <comment>Status...</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_CODE" xml:space="preserve">
    <value>Material code...</value>
    <comment>Material code...</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_GR" xml:space="preserve">
    <value>Materials group</value>
    <comment>Materials group</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_NAME" xml:space="preserve">
    <value>Name supplies</value>
    <comment>Name supplies</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_TYPE" xml:space="preserve">
    <value>Type of material</value>
    <comment>Type of material</comment>
  </data>
  <data name="VX_MG_TXT_VALUE" xml:space="preserve">
    <value>Value...</value>
    <comment>Value...</comment>
  </data>
  <data name="VX_MG_VALIDATE_FILL_FULL_REQ" xml:space="preserve">
    <value>{0} Requires full entry</value>
    <comment>{0} Requires full entry</comment>
  </data>
  <data name="VX_MG_VALIDATE_ITEM_CODE" xml:space="preserve">
    <value>{0} does not exceed 250 characters</value>
    <comment>{0} does not exceed 250 characters</comment>
  </data>
</root>