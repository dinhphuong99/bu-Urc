<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VC_ADD_EDIT" xml:space="preserve">
    <value>Add new</value>
    <comment>Add new</comment>
  </data>
  <data name="VC_CURD_END_POINT" xml:space="preserve">
    <value>Final point</value>
    <comment>Final point</comment>
  </data>
  <data name="VC_CURD_LBL_BED" xml:space="preserve">
    <value>Bed</value>
    <comment>Bed</comment>
  </data>
  <data name="VC_CURD_LBL_CAR_NAME" xml:space="preserve">
    <value>Car name</value>
    <comment>Car name</comment>
  </data>
  <data name="VC_CURD_LBL_COUNT_SEAT" xml:space="preserve">
    <value>Number of seats</value>
    <comment>Number of seats</comment>
  </data>
  <data name="VC_CURD_LBL_DISTANCE" xml:space="preserve">
    <value>Distance (meters)</value>
    <comment>Distance (meters)</comment>
  </data>
  <data name="VC_CURD_LBL_FIND_NAME_LICENCES" xml:space="preserve">
    <value>Search by name and number plate</value>
    <comment>Search by name and number plate</comment>
  </data>
  <data name="VC_CURD_LBL_GENERATE" xml:space="preserve">
    <value>Create</value>
    <comment>Create</comment>
  </data>
  <data name="VC_CURD_LBL_HOME_CAR" xml:space="preserve">
    <value>Garage</value>
    <comment>Garage</comment>
  </data>
  <data name="VC_CURD_LBL_IMG_CAR" xml:space="preserve">
    <value>Photo car</value>
    <comment>Photo car</comment>
  </data>
  <data name="VC_CURD_LBL_LICENCES" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VC_CURD_LBL_LICENCES_PLATE" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VC_CURD_LBL_LIST_ROOM" xml:space="preserve">
    <value>List room</value>
    <comment>List room</comment>
  </data>
  <data name="VC_CURD_LBL_NAME_TRIP" xml:space="preserve">
    <value>Journey Name</value>
    <comment>Journey Name</comment>
  </data>
  <data name="VC_CURD_LBL_ROUTE" xml:space="preserve">
    <value>Route</value>
    <comment>Route</comment>
  </data>
  <data name="VC_CURD_LBL_SEARCH_HOME_CAR" xml:space="preserve">
    <value>Search by car name</value>
    <comment>Search by car name</comment>
  </data>
  <data name="VC_CURD_LBL_SEAT_PER" xml:space="preserve">
    <value>Seat</value>
    <comment>Seat</comment>
  </data>
  <data name="VC_CURD_LBL_START_POINT" xml:space="preserve">
    <value>First point</value>
    <comment>First point</comment>
  </data>
  <data name="VC_CURD_LBL_TIME_ARRIVAL" xml:space="preserve">
    <value>Arrival time</value>
    <comment>Arrival time</comment>
  </data>
  <data name="VC_CURD_LBL_TIME_START" xml:space="preserve">
    <value>Time</value>
    <comment>Time</comment>
  </data>
  <data name="VC_CURD_LBL_TYPE_CAR" xml:space="preserve">
    <value>Range of vehicle</value>
    <comment>Range of vehicle</comment>
  </data>
  <data name="VC_CURD_LBL_TYPE_SEAT" xml:space="preserve">
    <value>Seat type</value>
    <comment>Seat type</comment>
  </data>
  <data name="VC_CURD_LBL_TYPE_SERVICE" xml:space="preserve">
    <value>Type of service</value>
    <comment>Type of service</comment>
  </data>
  <data name="VC_CURD_LI_CAR_JOUNEY" xml:space="preserve">
    <value>Car journey</value>
    <comment>Car journey</comment>
  </data>
  <data name="VC_CURD_LI_INFO_CAR" xml:space="preserve">
    <value>Vehicle information</value>
    <comment>Vehicle information</comment>
  </data>
  <data name="VC_CURD_TXT_CAR_NAME" xml:space="preserve">
    <value>Car name</value>
    <comment>Car name</comment>
  </data>
  <data name="VC_CURD_TXT_COUNT_SEAT" xml:space="preserve">
    <value>Number of seats</value>
    <comment>Number of seats</comment>
  </data>
  <data name="VC_CURD_TXT_FIND_NAME_LICENCES" xml:space="preserve">
    <value>Search by name and number plate</value>
    <comment>Search by name and number plate</comment>
  </data>
  <data name="VC_CURD_TXT_HOME_CAR" xml:space="preserve">
    <value>Choose a garage</value>
    <comment>Choose a garage</comment>
  </data>
  <data name="VC_CURD_TXT_LICENCES" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VC_CURD_TXT_LICENCES_PLATE" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VC_CURD_TXT_NAME_TRIP" xml:space="preserve">
    <value>Destination</value>
    <comment>Destination</comment>
  </data>
  <data name="VC_CURD_TXT_SEARCH_HOME_CAR" xml:space="preserve">
    <value>Search by car name</value>
    <comment>Search by car name</comment>
  </data>
  <data name="VC_CURD_TXT_TYPE_CAR" xml:space="preserve">
    <value>Select the vehicle type</value>
    <comment>Select the vehicle type</comment>
  </data>
  <data name="VC_CURD_TXT_TYPE_SERVICE" xml:space="preserve">
    <value>Choose a service type</value>
    <comment>Choose a service type</comment>
  </data>
  <data name="VC_EDIT_TITLE_UPDATE_INFO_CAR" xml:space="preserve">
    <value>Update vehicle information</value>
    <comment>Update vehicle information</comment>
  </data>
  <data name="VC_LINK_HOME_CAR" xml:space="preserve">
    <value>List of garage</value>
    <comment>List of garage</comment>
  </data>
  <data name="VC_LIST_COL_END_POINT" xml:space="preserve">
    <value>Destination</value>
    <comment>Destination</comment>
  </data>
  <data name="VC_LIST_COL_HOME_CAR" xml:space="preserve">
    <value>Garage</value>
    <comment>Garage</comment>
  </data>
  <data name="VC_LIST_COL_NAME_CAR" xml:space="preserve">
    <value>Car name</value>
    <comment>Car name</comment>
  </data>
  <data name="VC_LIST_COL_NUM_SEAT" xml:space="preserve">
    <value>Number of seats</value>
    <comment>Number of seats</comment>
  </data>
  <data name="VC_LIST_COL_PLATE" xml:space="preserve">
    <value>License plate</value>
    <comment>License plate</comment>
  </data>
  <data name="VC_LIST_COL_ROUTE" xml:space="preserve">
    <value>Journeys</value>
    <comment>Journeys</comment>
  </data>
  <data name="VC_LIST_COL_START_POINT" xml:space="preserve">
    <value>Point away</value>
    <comment>Point away</comment>
  </data>
  <data name="VC_LIST_COL_TIME_ARRIVAL" xml:space="preserve">
    <value>Arrival time</value>
    <comment>Arrival time</comment>
  </data>
  <data name="VC_LIST_COL_TIME_START" xml:space="preserve">
    <value>Time</value>
    <comment>Time</comment>
  </data>
  <data name="VC_LIST_COL_TYPE_CAR" xml:space="preserve">
    <value>Range of vehicle</value>
    <comment>Range of vehicle</comment>
  </data>
  <data name="VC_LIST_HOME_CAR" xml:space="preserve">
    <value>List of garage</value>
    <comment>List of garage</comment>
  </data>
  <data name="VC_MSG_ADD_NEW_CAR_SUCCESS" xml:space="preserve">
    <value>Add new vehicles successfully!</value>
    <comment>Add new vehicles successfully!</comment>
  </data>
  <data name="VC_MSG_ERR_ADD_ITEMS" xml:space="preserve">
    <value>There was an error adding the item</value>
    <comment>There was an error adding the item</comment>
  </data>
  <data name="VC_MSG_ERR_EDIT_INF" xml:space="preserve">
    <value>There was an error correcting the information</value>
    <comment>There was an error correcting the information</comment>
  </data>
  <data name="VC_MSG_ERR_GET_ITEM" xml:space="preserve">
    <value>The Get Item fails!</value>
    <comment>The Get Item fails!</comment>
  </data>
  <data name="VC_MSG_ERR_GET_PARENT" xml:space="preserve">
    <value>Get Parent Group fail</value>
    <comment>Get Parent Group fail</comment>
  </data>
  <data name="VC_MSG_NO_CATE_SELECTED" xml:space="preserve">
    <value>No items selected!</value>
    <comment>No items selected!</comment>
  </data>
  <data name="VC_MSG_SURE_DELETE_CAR" xml:space="preserve">
    <value>Are you sure to delete the car:</value>
    <comment>Are you sure to delete the car:</comment>
  </data>
  <data name="VC_MSG_SURE_DELETE_CATE" xml:space="preserve">
    <value>Are you sure you want to lock these selected items?</value>
    <comment>Are you sure you want to lock these selected items?</comment>
  </data>
  <data name="VC_MSG_SURE_DELETE_USER" xml:space="preserve">
    <value>Are you sure to block the user:</value>
    <comment>Are you sure to block the user:</comment>
  </data>
  <data name="VC_MSG_UPDATE_INF_CAR_SUCCESS" xml:space="preserve">
    <value>Fix car information successfully!</value>
    <comment>Fix car information successfully!</comment>
  </data>
  <data name="VC_VALIDATE_ADD_HOUR_WORK" xml:space="preserve">
    <value>Add Main Hours</value>
    <comment>Add Main Hours</comment>
  </data>
  <data name="VC_VALIDATE_ADD_HOUR_WORK_EXTRA" xml:space="preserve">
    <value>Adding Extra Hours</value>
    <comment>Adding Extra Hours</comment>
  </data>
  <data name="VC_VALIDATE_FILE_SIZE" xml:space="preserve">
    <value>The maximum file size allowed is 3 MB!</value>
    <comment>The maximum file size allowed is 3 MB!</comment>
  </data>
  <data name="VC_VALIDATE_HEIGHT_WIDTH" xml:space="preserve">
    <value>The maximum file size allowed is (1000px x 1000px)!</value>
    <comment>The maximum file size allowed is (1000px x 1000px)!</comment>
  </data>
</root>