<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VX_CRUD_CODE_EXIST" xml:space="preserve">
    <value>代码已经存在</value>
    <comment>代码已经存在</comment>
  </data>
  <data name="VX_CRUD_EDIT_EXIST" xml:space="preserve">
    <value>成功编辑服务信息</value>
    <comment>成功编辑服务信息</comment>
  </data>
  <data name="VX_CRUD_LOCK_EXIST" xml:space="preserve">
    <value>锁定成功！</value>
    <comment>锁定成功！</comment>
  </data>
  <data name="VX_CRUD_NEW_EXIST" xml:space="preserve">
    <value>添加新的成功耗材</value>
    <comment>添加新的成功耗材</comment>
  </data>
  <data name="VX_CRUD_NEW_SERVICE_EXIST" xml:space="preserve">
    <value>成功添加新服务</value>
    <comment>成功添加新服务</comment>
  </data>
  <data name="VX_MG_ACT" xml:space="preserve">
    <value>工作</value>
    <comment>工作</comment>
  </data>
  <data name="VX_MG_ADD" xml:space="preserve">
    <value>添加新的耗材</value>
    <comment>添加新的耗材</comment>
  </data>
  <data name="VX_MG_ADD_ATR" xml:space="preserve">
    <value>添加新属性</value>
    <comment>添加新属性</comment>
  </data>
  <data name="VX_MG_ADD_FILE" xml:space="preserve">
    <value>添加新文件</value>
    <comment>添加新文件</comment>
  </data>
  <data name="VX_MG_DEACT" xml:space="preserve">
    <value>停止工作</value>
    <comment>停止工作</comment>
  </data>
  <data name="VX_MG_EDIT" xml:space="preserve">
    <value>编辑信息</value>
    <comment>编辑信息</comment>
  </data>
  <data name="VX_MG_EDIT_ATR" xml:space="preserve">
    <value>编辑信息</value>
    <comment>编辑信息</comment>
  </data>
  <data name="VX_MG_EDIT_FILE" xml:space="preserve">
    <value>编辑信息</value>
    <comment>编辑信息</comment>
  </data>
  <data name="VX_MG_FILE" xml:space="preserve">
    <value>文件</value>
    <comment>文件</comment>
  </data>
  <data name="VX_MG_LBL_AVATAR" xml:space="preserve">
    <value>个人资料图片</value>
    <comment>个人资料图片</comment>
  </data>
  <data name="VX_MG_LBL_FILE_NAME" xml:space="preserve">
    <value>文件名</value>
    <comment>文件名</comment>
  </data>
  <data name="VX_MG_LBL_IMG" xml:space="preserve">
    <value>图片</value>
    <comment>图片</comment>
  </data>
  <data name="VX_MG_LBL_LANGUAGE" xml:space="preserve">
    <value>语言</value>
    <comment>语言</comment>
  </data>
  <data name="VX_MG_LBL_NOTE" xml:space="preserve">
    <value>注意</value>
    <comment>注意</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY" xml:space="preserve">
    <value>性能</value>
    <comment>性能</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY_NAME" xml:space="preserve">
    <value>物业名称</value>
    <comment>物业名称</comment>
  </data>
  <data name="VX_MG_LBL_QR_CODE" xml:space="preserve">
    <value>条形码</value>
    <comment>条形码</comment>
  </data>
  <data name="VX_MG_LBL_ST_STATUS" xml:space="preserve">
    <value>状态</value>
    <comment>状态</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_CODE" xml:space="preserve">
    <value>供应准则</value>
    <comment>供应准则</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_GR" xml:space="preserve">
    <value>材料组</value>
    <comment>材料组</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_NAME" xml:space="preserve">
    <value>耗材名称</value>
    <comment>耗材名称</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_TYPE" xml:space="preserve">
    <value>材料类型</value>
    <comment>材料类型</comment>
  </data>
  <data name="VX_MG_LBL_VALUE" xml:space="preserve">
    <value>值得</value>
    <comment>值得</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE" xml:space="preserve">
    <value>你确定要锁定这个项目吗？</value>
    <comment>你确定要锁定这个项目吗？</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_CANCLE" xml:space="preserve">
    <value>消除</value>
    <comment>消除</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_TITLE" xml:space="preserve">
    <value>确认</value>
    <comment>确认</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_LIST" xml:space="preserve">
    <value>您确定要锁定这些选定的项目吗？</value>
    <comment>您确定要锁定这些选定的项目吗？</comment>
  </data>
  <data name="VX_MG_NAME" xml:space="preserve">
    <value>供应清单</value>
    <comment>供应清单</comment>
  </data>
  <data name="VX_MG_SUPPLY_CODE" xml:space="preserve">
    <value>物资代码。</value>
    <comment>物资代码。</comment>
  </data>
  <data name="VX_MG_SUPPLY_NAME" xml:space="preserve">
    <value>用品名称。</value>
    <comment>用品名称。</comment>
  </data>
  <data name="VX_MG_SUPPLY_TITLE" xml:space="preserve">
    <value>标题</value>
    <comment>标题</comment>
  </data>
  <data name="VX_MG_TOUR_TODAY" xml:space="preserve">
    <value>今日登记的旅行</value>
    <comment>今日登记的旅行</comment>
  </data>
  <data name="VX_MG_TXT_CHOOSE_STT" xml:space="preserve">
    <value>选择状态...</value>
    <comment>选择状态...</comment>
  </data>
  <data name="VX_MG_TXT_FILE_NAME" xml:space="preserve">
    <value>文件名...</value>
    <comment>文件名...</comment>
  </data>
  <data name="VX_MG_TXT_FULLNAME" xml:space="preserve">
    <value>全名..</value>
    <comment>全名..</comment>
  </data>
  <data name="VX_MG_TXT_NOTE" xml:space="preserve">
    <value>笔记..</value>
    <comment>笔记..</comment>
  </data>
  <data name="VX_MG_TXT_PROPERTY" xml:space="preserve">
    <value>属性......</value>
    <comment>属性......</comment>
  </data>
  <data name="VX_MG_TXT_QR_CODE" xml:space="preserve">
    <value>条形码......</value>
    <comment>条形码......</comment>
  </data>
  <data name="VX_MG_TXT_SEARCH_SUPPLY_NAME" xml:space="preserve">
    <value>查找耗材名称......</value>
    <comment>查找耗材名称......</comment>
  </data>
  <data name="VX_MG_TXT_ST_STATUS" xml:space="preserve">
    <value>状态......</value>
    <comment>状态......</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_CODE" xml:space="preserve">
    <value>材料代码......</value>
    <comment>材料代码......</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_GR" xml:space="preserve">
    <value>材料组</value>
    <comment>材料组</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_NAME" xml:space="preserve">
    <value>耗材名称</value>
    <comment>耗材名称</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_TYPE" xml:space="preserve">
    <value>材料类型</value>
    <comment>材料类型</comment>
  </data>
  <data name="VX_MG_TXT_VALUE" xml:space="preserve">
    <value>价值......</value>
    <comment>价值......</comment>
  </data>
  <data name="VX_MG_VALIDATE_FILL_FULL_REQ" xml:space="preserve">
    <value>{0}需要完整输入</value>
    <comment>{0}需要完整输入</comment>
  </data>
  <data name="VX_MG_VALIDATE_ITEM_CODE" xml:space="preserve">
    <value>{0}不超过250个字符</value>
    <comment>{0}不超过250个字符</comment>
  </data>
</root>