<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VB_ADD_TITLE" xml:space="preserve">
    <value>Add new</value>
    <comment>Add new</comment>
  </data>
  <data name="VB_CURD_LBL_AVATAR" xml:space="preserve">
    <value>Avatar</value>
    <comment>Avatar</comment>
  </data>
  <data name="VB_CURD_LBL_COUNT_PER" xml:space="preserve">
    <value>Number of people</value>
    <comment>Number of people</comment>
  </data>
  <data name="VB_CURD_LBL_DRIVER_NAME" xml:space="preserve">
    <value>Driver's name</value>
    <comment>Driver's name</comment>
  </data>
  <data name="VB_CURD_LBL_END_POINT" xml:space="preserve">
    <value>Destination</value>
    <comment>Destination</comment>
  </data>
  <data name="VB_CURD_LBL_FIND_CAR_NAME" xml:space="preserve">
    <value>Search by car name</value>
    <comment>Search by car name</comment>
  </data>
  <data name="VB_CURD_LBL_HOME_CAR" xml:space="preserve">
    <value>Garage</value>
    <comment>Garage</comment>
  </data>
  <data name="VB_CURD_LBL_IDEN" xml:space="preserve">
    <value>ID</value>
    <comment>ID</comment>
  </data>
  <data name="VB_CURD_LBL_LICENCES_PLATE" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VB_CURD_LBL_NAME_DRIVER" xml:space="preserve">
    <value>Driver's name</value>
    <comment>Driver's name</comment>
  </data>
  <data name="VB_CURD_LBL_NAME_DRIVER1" xml:space="preserve">
    <value>Driver's name</value>
    <comment>Driver's name</comment>
  </data>
  <data name="VB_CURD_LBL_NUM_SEAT" xml:space="preserve">
    <value>Number of seats</value>
    <comment>Number of seats</comment>
  </data>
  <data name="VB_CURD_LBL_PRICE" xml:space="preserve">
    <value>Price</value>
    <comment>Price</comment>
  </data>
  <data name="VB_CURD_LBL_SELECT_SEAT" xml:space="preserve">
    <value>Select the type of seat</value>
    <comment>Select the type of seat</comment>
  </data>
  <data name="VB_CURD_LBL_START_POINT" xml:space="preserve">
    <value>Point away</value>
    <comment>Point away</comment>
  </data>
  <data name="VB_CURD_LBL_STATUS" xml:space="preserve">
    <value>Status</value>
    <comment>Status</comment>
  </data>
  <data name="VB_CURD_LBL_TIME_TRIP" xml:space="preserve">
    <value>Trip time</value>
    <comment>Trip time</comment>
  </data>
  <data name="VB_CURD_LBL_TYPE_CAR" xml:space="preserve">
    <value>Car type</value>
    <comment>Car type</comment>
  </data>
  <data name="VB_CURD_LBL_TYPE_SEAT" xml:space="preserve">
    <value>Seat type</value>
    <comment>Seat type</comment>
  </data>
  <data name="VB_CURD_LBL_TYPE_SERVICE" xml:space="preserve">
    <value>Type of service</value>
    <comment>Type of service</comment>
  </data>
  <data name="VB_CURD_TXT_COUNT_PER" xml:space="preserve">
    <value>Number of people</value>
    <comment>Number of people</comment>
  </data>
  <data name="VB_CURD_TXT_DRIVER_NAME" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VB_CURD_TXT_END_POINT" xml:space="preserve">
    <value>Destination</value>
    <comment>Destination</comment>
  </data>
  <data name="VB_CURD_TXT_FIND_CAR_NAME" xml:space="preserve">
    <value>Search by car name</value>
    <comment>Search by car name</comment>
  </data>
  <data name="VB_CURD_TXT_HOME_CAR" xml:space="preserve">
    <value>Choose a garage</value>
    <comment>Choose a garage</comment>
  </data>
  <data name="VB_CURD_TXT_IDEN" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VB_CURD_TXT_LICENCES_PLATE" xml:space="preserve">
    <value>License plates</value>
    <comment>License plates</comment>
  </data>
  <data name="VB_CURD_TXT_NAME_DRIVER" xml:space="preserve">
    <value>Garage</value>
    <comment>Garage</comment>
  </data>
  <data name="VB_CURD_TXT_NUM_SEAT" xml:space="preserve">
    <value>Number of seats</value>
    <comment>Number of seats</comment>
  </data>
  <data name="VB_CURD_TXT_PRICE" xml:space="preserve">
    <value>Price</value>
    <comment>Price</comment>
  </data>
  <data name="VB_CURD_TXT_START_POINT" xml:space="preserve">
    <value>Point away</value>
    <comment>Point away</comment>
  </data>
  <data name="VB_CURD_TXT_STATUS" xml:space="preserve">
    <value>Status</value>
    <comment>Status</comment>
  </data>
  <data name="VB_CURD_TXT_TIME_TRIP" xml:space="preserve">
    <value>Trip time</value>
    <comment>Trip time</comment>
  </data>
  <data name="VB_CURD_TXT_TYPE_CAR" xml:space="preserve">
    <value>Car type</value>
    <comment>Car type</comment>
  </data>
  <data name="VB_CURD_TXT_TYPE_SERVICE" xml:space="preserve">
    <value>Choose a service type</value>
    <comment>Choose a service type</comment>
  </data>
  <data name="VB_EDIT_TITLE_UPDATE_TRIP" xml:space="preserve">
    <value>Update trip information</value>
    <comment>Update trip information</comment>
  </data>
  <data name="VB_LINK_STATICS_TRIP" xml:space="preserve">
    <value>Trip statistics</value>
    <comment>Trip statistics</comment>
  </data>
  <data name="VB_LIST_COL_ACTION" xml:space="preserve">
    <value>Action</value>
    <comment>Action</comment>
  </data>
  <data name="VB_LIST_COL_COUNT_PER" xml:space="preserve">
    <value>Amount of people</value>
    <comment>Amount of people</comment>
  </data>
  <data name="VB_LIST_COL_END_POINT" xml:space="preserve">
    <value>Destination</value>
    <comment>Destination</comment>
  </data>
  <data name="VB_LIST_COL_HOME_CAR" xml:space="preserve">
    <value>Garage</value>
    <comment>Garage</comment>
  </data>
  <data name="VB_LIST_COL_LICENCES_PLATE" xml:space="preserve">
    <value>License plate</value>
    <comment>License plate</comment>
  </data>
  <data name="VB_LIST_COL_NAME_DRIVER" xml:space="preserve">
    <value>Driving name</value>
    <comment>Driving name</comment>
  </data>
  <data name="VB_LIST_COL_PRICE" xml:space="preserve">
    <value>Price</value>
    <comment>Price</comment>
  </data>
  <data name="VB_LIST_COL_START_POINT" xml:space="preserve">
    <value>Point away</value>
    <comment>Point away</comment>
  </data>
  <data name="VB_LIST_COL_STATUS" xml:space="preserve">
    <value>Status</value>
    <comment>Status</comment>
  </data>
  <data name="VB_LIST_COL_TIME_BOOKING_TRIP" xml:space="preserve">
    <value>Trip time</value>
    <comment>Trip time</comment>
  </data>
  <data name="VB_MSG_ACCEPTED" xml:space="preserve">
    <value>Got the trip</value>
    <comment>Got the trip</comment>
  </data>
  <data name="VB_MSG_ACCEPT_SUCCESS" xml:space="preserve">
    <value>Get successful shipping orders</value>
    <comment>Get successful shipping orders</comment>
  </data>
  <data name="VB_MSG_ADD_BOOKING" xml:space="preserve">
    <value>Successful booking</value>
    <comment>Successful booking</comment>
  </data>
  <data name="VB_MSG_ADD_ORDER_SUCCESS" xml:space="preserve">
    <value>Add successful shipping orders</value>
    <comment>Add successful shipping orders</comment>
  </data>
  <data name="VB_MSG_BOOKING_SUCCESS" xml:space="preserve">
    <value>Book car success</value>
    <comment>Book car success</comment>
  </data>
  <data name="VB_MSG_CANCLED_ACCEPT" xml:space="preserve">
    <value>You canceled the trip</value>
    <comment>You canceled the trip</comment>
  </data>
  <data name="VB_MSG_CANCLE_ACCEPT_SUCCESS" xml:space="preserve">
    <value>Canceling a successful trip</value>
    <comment>Canceling a successful trip</comment>
  </data>
  <data name="VB_MSG_CANCLE_FAIL" xml:space="preserve">
    <value>Penalty cancellation is not successful</value>
    <comment>Penalty cancellation is not successful</comment>
  </data>
  <data name="VB_MSG_CANCLE_SUCCESS" xml:space="preserve">
    <value>Cancel the trip successfully</value>
    <comment>Cancel the trip successfully</comment>
  </data>
  <data name="VB_MSG_DRIVER_NOT_COMFIRM" xml:space="preserve">
    <value>The driver has not confirmed the order</value>
    <comment>The driver has not confirmed the order</comment>
  </data>
  <data name="VB_MSG_JOURNEY_CREATE_FAIL" xml:space="preserve">
    <value>Create error journey</value>
    <comment>Create error journey</comment>
  </data>
  <data name="VB_MSG_JOURNEY_NULL" xml:space="preserve">
    <value>This journey does not exist</value>
    <comment>This journey does not exist</comment>
  </data>
  <data name="VB_MSG_JOURNEY_UNVAILABLE" xml:space="preserve">
    <value>The trip does not exist or is not available</value>
    <comment>The trip does not exist or is not available</comment>
  </data>
  <data name="VB_MSG_NO_CATE_SELECTED" xml:space="preserve">
    <value>No items selected!</value>
    <comment>No items selected!</comment>
  </data>
  <data name="VB_MSG_ORDER_NULL" xml:space="preserve">
    <value>Order does not exist or is not available</value>
    <comment>Order does not exist or is not available</comment>
  </data>
  <data name="VB_MSG_SEND_NOTICE" xml:space="preserve">
    <value>Successfully sent notify</value>
    <comment>Successfully sent notify</comment>
  </data>
  <data name="VB_MSG_SURE_DELETE_TRIP" xml:space="preserve">
    <value>Are you sure to delete the trip:</value>
    <comment>Are you sure to delete the trip:</comment>
  </data>
  <data name="VB_MSG_SURE_DELETE_TRIP_SELECTED" xml:space="preserve">
    <value>Are you sure you want to delete these selected trips?</value>
    <comment>Are you sure you want to delete these selected trips?</comment>
  </data>
  <data name="VB_MSG_UPDATE_STT" xml:space="preserve">
    <value>Update status successfully</value>
    <comment>Update status successfully</comment>
  </data>
  <data name="VB_MSG_UPDATE_SUCCESS" xml:space="preserve">
    <value>successful update</value>
    <comment>successful update</comment>
  </data>
  <data name="VB_MSG_USER_NULL" xml:space="preserve">
    <value>This user does not exist</value>
    <comment>This user does not exist</comment>
  </data>
  <data name="VB_TITLE_STATICS_TRIP" xml:space="preserve">
    <value>Trip statistics</value>
    <comment>Trip statistics</comment>
  </data>
</root>