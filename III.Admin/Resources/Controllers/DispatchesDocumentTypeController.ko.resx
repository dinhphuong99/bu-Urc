<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DDT_CURD_LBL_ADD_SYMBOL" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDT_CURD_LBL_NAME_TYPE_OF_TEXT" xml:space="preserve">
    <value>텍스트 유형의 이름</value>
    <comment>Tên loại văn bản</comment>
  </data>
  <data name="DDT_CURD_LBL_SEARCH_SYMBOL" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDT_CURD_TXT_ADD_SYMBOL" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDT_CURD_TXT_NAME_TYPE_OF_TEXT" xml:space="preserve">
    <value>텍스트 유형의 이름</value>
    <comment>Tên loại văn bản</comment>
  </data>
  <data name="DDT_CURD_TXT_SEARCH_SYMBOL" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDT_LINK_DDT" xml:space="preserve">
    <value>디렉토리 관리</value>
    <comment>Quản trị danh muc</comment>
  </data>
  <data name="DDT_LINK_HOME" xml:space="preserve">
    <value>홈</value>
    <comment>Trang chủ</comment>
  </data>
  <data name="DDT_LIST_COL_ACTION" xml:space="preserve">
    <value>액션</value>
    <comment>Tác vụ</comment>
  </data>
  <data name="DDT_LIST_COL_NAME_TYPE_OF_TEXT" xml:space="preserve">
    <value>텍스트 유형의 이름</value>
    <comment>Tên loại văn bản</comment>
  </data>
  <data name="DDT_LIST_COL_PROCESSING_DEAD_LINE" xml:space="preserve">
    <value>처리 기한</value>
    <comment>Hạn xử lý</comment>
  </data>
  <data name="DDT_LIST_COL_SYMBOL" xml:space="preserve">
    <value>표기법</value>
    <comment>Ký hiệu</comment>
  </data>
  <data name="DDT_MSG_ADD_DOCUMENT_TYPE_ERROR" xml:space="preserve">
    <value>잘못된 텍스트를 추가하십시오!</value>
    <comment>Thêm loại văn bản bị lỗi!</comment>
  </data>
  <data name="DDT_MSG_ADD_DOCUMENT_TYPE_SUCCESS" xml:space="preserve">
    <value>성공적인 텍스트 유형 추가</value>
    <comment>Thêm loại văn bản thành công</comment>
  </data>
  <data name="DDT_MSG_CHARACTER" xml:space="preserve">
    <value>기호에는 문자와 숫자가 포함되며 특수 문자는 포함되지 않습니다.</value>
    <comment>Ký hiệu bao gồm chữ cái và số và không bao gồm ký tự đặc biệt</comment>
  </data>
  <data name="DDT_MSG_DELETE_CHOSE" xml:space="preserve">
    <value>삭제할 레코드를 선택하십시오.</value>
    <comment>Vui lòng chọn bản ghi để xóa</comment>
  </data>
  <data name="DDT_MSG_DELETE_ERROR" xml:space="preserve">
    <value>오류 텍스트 유형 삭제</value>
    <comment>Xóa loại văn bản lỗi</comment>
  </data>
  <data name="DDT_MSG_DELETE_SUCCESS" xml:space="preserve">
    <value>성공 삭제</value>
    <comment>Xóa thành công</comment>
  </data>
  <data name="DDT_MSG_DOCUMENT_TYPE" xml:space="preserve">
    <value>텍스트 유형</value>
    <comment>loại văn bản</comment>
  </data>
  <data name="DDT_MSG_DOCUMENT_TYPE_NOT_EXIST" xml:space="preserve">
    <value>텍스트 유형이 존재하지 않습니다. 페이지를 새로 고침하십시오.</value>
    <comment>Loại văn bản không tồn tại, vui lòng làm mới trang</comment>
  </data>
  <data name="DDT_MSG_DT_ALREADY_EXIST_IN_DT" xml:space="preserve">
    <value>텍스트의 유형이 이미 교과서에 있습니다!</value>
    <comment>Loại văn bản đã tồn tại trong sổ văn bản!</comment>
  </data>
  <data name="DDT_MSG_ID_ALREADY_EXIST" xml:space="preserve">
    <value>이 유형의 텍스트가 이미 있습니다. 다른 코드를 입력하십시오!</value>
    <comment>Loại văn bản này đã tồn tại, vui lòng nhập mã khác!</comment>
  </data>
  <data name="DDT_MSG_ID_HAS_BEEN_USED" xml:space="preserve">
    <value>다른 중요한 텍스트 유형에 사용 된 텍스트 유형 코드입니다. 다시 시도하십시오!</value>
    <comment>Mã loại văn bản đã dùng cho loại văn bản trọng khác, vui lòng thử lại!</comment>
  </data>
  <data name="DDT_MSG_NAME_TYPE_OF_TEXT" xml:space="preserve">
    <value>텍스트 유형의 이름에 적어도 하나의 문자가 있고 특수 문자가 포함되어 있지 않습니다.</value>
    <comment>Tên loại văn bản có ít nhất một ký tự và không bao gồm ký tự đặc biệt</comment>
  </data>
  <data name="DDT_MSG_NO_BLANK_NAME_TYPE_OF_TEXT" xml:space="preserve">
    <value>텍스트 유형 이름은 비워 둘 수 없습니다.</value>
    <comment>Tên loại văn bản không được để trống</comment>
  </data>
  <data name="DDT_MSG_NO_BLANK_PROCESSING_DEAD_LINE" xml:space="preserve">
    <value>처리 시간 제한은 비워 둘 수 없습니다.</value>
    <comment>Hạn xử lý không được để trống</comment>
  </data>
  <data name="DDT_MSG_NO_BLANK_SYMBOL" xml:space="preserve">
    <value>기호는 비워 둘 수 없습니다.</value>
    <comment>Ký hiệu không được để trống</comment>
  </data>
  <data name="DDT_MSG_UPDATE_DOCUMENT_TYPE_ERROR" xml:space="preserve">
    <value>잘못된 텍스트 유형을 업데이트하십시오!</value>
    <comment>Cập nhập loại văn bản bị lỗi!</comment>
  </data>
  <data name="DDT_MSG_UPDATE_SUCCESS" xml:space="preserve">
    <value>텍스트 유형을 성공적으로 업데이트하십시오.</value>
    <comment>Cập nhập loại văn bản thành công</comment>
  </data>
  <data name="DDT_TITLE_ADD_DDT" xml:space="preserve">
    <value>새로운 유형의 텍스트 추가</value>
    <comment>Thêm mới loại văn bản</comment>
  </data>
  <data name="DDT_TITLE_DDT" xml:space="preserve">
    <value>텍스트 유형</value>
    <comment>Loại văn bản</comment>
  </data>
  <data name="DDT_TITLE_DISPATCHES_DOCUMENT_TYPE" xml:space="preserve">
    <value>텍스트 유형 목록</value>
    <comment>Danh mục loại văn bản</comment>
  </data>
  <data name="DDT_TITLE_EDIT_DDT" xml:space="preserve">
    <value>텍스트 유형 업데이트</value>
    <comment>Cập nhât loại văn bản</comment>
  </data>
</root>