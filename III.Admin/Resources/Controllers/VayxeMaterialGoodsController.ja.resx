<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VX_CRUD_CODE_EXIST" xml:space="preserve">
    <value>コードは既に存在します</value>
    <comment>コードは既に存在します</comment>
  </data>
  <data name="VX_CRUD_EDIT_EXIST" xml:space="preserve">
    <value>サービス情報を正常に編集します</value>
    <comment>サービス情報を正常に編集します</comment>
  </data>
  <data name="VX_CRUD_LOCK_EXIST" xml:space="preserve">
    <value>ロックに成功しました！</value>
    <comment>ロックに成功しました！</comment>
  </data>
  <data name="VX_CRUD_NEW_EXIST" xml:space="preserve">
    <value>新しい成功した消耗品を追加する</value>
    <comment>新しい成功した消耗品を追加する</comment>
  </data>
  <data name="VX_CRUD_NEW_SERVICE_EXIST" xml:space="preserve">
    <value>新しいサービスを正常に追加します</value>
    <comment>新しいサービスを正常に追加します</comment>
  </data>
  <data name="VX_MG_ACT" xml:space="preserve">
    <value>運営</value>
    <comment>運営</comment>
  </data>
  <data name="VX_MG_ADD" xml:space="preserve">
    <value>新しい消耗品を追加する</value>
    <comment>新しい消耗品を追加する</comment>
  </data>
  <data name="VX_MG_ADD_ATR" xml:space="preserve">
    <value>新しいプロパティを追加</value>
    <comment>新しいプロパティを追加</comment>
  </data>
  <data name="VX_MG_ADD_FILE" xml:space="preserve">
    <value>新しいファイルを追加</value>
    <comment>新しいファイルを追加</comment>
  </data>
  <data name="VX_MG_DEACT" xml:space="preserve">
    <value>仕事をやめる</value>
    <comment>仕事をやめる</comment>
  </data>
  <data name="VX_MG_EDIT" xml:space="preserve">
    <value>情報を編集</value>
    <comment>情報を編集</comment>
  </data>
  <data name="VX_MG_EDIT_ATR" xml:space="preserve">
    <value>情報を編集</value>
    <comment>情報を編集</comment>
  </data>
  <data name="VX_MG_EDIT_FILE" xml:space="preserve">
    <value>情報を編集</value>
    <comment>情報を編集</comment>
  </data>
  <data name="VX_MG_FILE" xml:space="preserve">
    <value>ファイル</value>
    <comment>ファイル</comment>
  </data>
  <data name="VX_MG_LBL_AVATAR" xml:space="preserve">
    <value>プロフィール写真</value>
    <comment>プロフィール写真</comment>
  </data>
  <data name="VX_MG_LBL_FILE_NAME" xml:space="preserve">
    <value>ファイル名</value>
    <comment>ファイル名</comment>
  </data>
  <data name="VX_MG_LBL_IMG" xml:space="preserve">
    <value>写真</value>
    <comment>写真</comment>
  </data>
  <data name="VX_MG_LBL_LANGUAGE" xml:space="preserve">
    <value>言語</value>
    <comment>言語</comment>
  </data>
  <data name="VX_MG_LBL_NOTE" xml:space="preserve">
    <value>注釈</value>
    <comment>注釈</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY" xml:space="preserve">
    <value>物性</value>
    <comment>物性</comment>
  </data>
  <data name="VX_MG_LBL_PROPERTY_NAME" xml:space="preserve">
    <value>物件名</value>
    <comment>物件名</comment>
  </data>
  <data name="VX_MG_LBL_QR_CODE" xml:space="preserve">
    <value>バーコード</value>
    <comment>バーコード</comment>
  </data>
  <data name="VX_MG_LBL_ST_STATUS" xml:space="preserve">
    <value>ステータス</value>
    <comment>ステータス</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_CODE" xml:space="preserve">
    <value>供給のコード</value>
    <comment>供給のコード</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_GR" xml:space="preserve">
    <value>材料グループ</value>
    <comment>材料グループ</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_NAME" xml:space="preserve">
    <value>サプライ品の名前</value>
    <comment>サプライ品の名前</comment>
  </data>
  <data name="VX_MG_LBL_SUPPLY_TYPE" xml:space="preserve">
    <value>素材の種類</value>
    <comment>素材の種類</comment>
  </data>
  <data name="VX_MG_LBL_VALUE" xml:space="preserve">
    <value>価値</value>
    <comment>価値</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE" xml:space="preserve">
    <value>このアイテムをロックしてもよろしいですか？</value>
    <comment>このアイテムをロックしてもよろしいですか？</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_CANCLE" xml:space="preserve">
    <value>キャンセルする</value>
    <comment>キャンセルする</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_FILE_TITLE" xml:space="preserve">
    <value>確認する</value>
    <comment>確認する</comment>
  </data>
  <data name="VX_MG_MSG_BLOCK_LIST" xml:space="preserve">
    <value>選択したこれらのアイテムをロックしてもよろしいですか？</value>
    <comment>選択したこれらのアイテムをロックしてもよろしいですか？</comment>
  </data>
  <data name="VX_MG_NAME" xml:space="preserve">
    <value>消耗品リスト</value>
    <comment>消耗品リスト</comment>
  </data>
  <data name="VX_MG_SUPPLY_CODE" xml:space="preserve">
    <value>供給のコード。</value>
    <comment>供給のコード。</comment>
  </data>
  <data name="VX_MG_SUPPLY_NAME" xml:space="preserve">
    <value>用品名。</value>
    <comment>用品名。</comment>
  </data>
  <data name="VX_MG_SUPPLY_TITLE" xml:space="preserve">
    <value>役職</value>
    <comment>役職</comment>
  </data>
  <data name="VX_MG_TOUR_TODAY" xml:space="preserve">
    <value>今日までの登録方法</value>
    <comment>今日までの登録方法</comment>
  </data>
  <data name="VX_MG_TXT_CHOOSE_STT" xml:space="preserve">
    <value>ステータスの選択...</value>
    <comment>ステータスの選択...</comment>
  </data>
  <data name="VX_MG_TXT_FILE_NAME" xml:space="preserve">
    <value>ファイル名...</value>
    <comment>ファイル名...</comment>
  </data>
  <data name="VX_MG_TXT_FULLNAME" xml:space="preserve">
    <value>フルネーム..</value>
    <comment>フルネーム..</comment>
  </data>
  <data name="VX_MG_TXT_NOTE" xml:space="preserve">
    <value>メモ..</value>
    <comment>メモ..</comment>
  </data>
  <data name="VX_MG_TXT_PROPERTY" xml:space="preserve">
    <value>プロパティ...</value>
    <comment>プロパティ...</comment>
  </data>
  <data name="VX_MG_TXT_QR_CODE" xml:space="preserve">
    <value>バーコード...</value>
    <comment>バーコード...</comment>
  </data>
  <data name="VX_MG_TXT_SEARCH_SUPPLY_NAME" xml:space="preserve">
    <value>サプライ品名を検索...</value>
    <comment>サプライ品名を検索...</comment>
  </data>
  <data name="VX_MG_TXT_ST_STATUS" xml:space="preserve">
    <value>ステータス...</value>
    <comment>ステータス...</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_CODE" xml:space="preserve">
    <value>材料コード...</value>
    <comment>材料コード...</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_GR" xml:space="preserve">
    <value>材料グループ</value>
    <comment>材料グループ</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_NAME" xml:space="preserve">
    <value>サプライ品の名前</value>
    <comment>サプライ品の名前</comment>
  </data>
  <data name="VX_MG_TXT_SUPPLY_TYPE" xml:space="preserve">
    <value>素材の種類</value>
    <comment>素材の種類</comment>
  </data>
  <data name="VX_MG_TXT_VALUE" xml:space="preserve">
    <value>値...</value>
    <comment>値...</comment>
  </data>
  <data name="VX_MG_VALIDATE_FILL_FULL_REQ" xml:space="preserve">
    <value>{0}完全なエントリが必要</value>
    <comment>{0}完全なエントリが必要</comment>
  </data>
  <data name="VX_MG_VALIDATE_ITEM_CODE" xml:space="preserve">
    <value>{0}は250文字を超えません</value>
    <comment>{0}は250文字を超えません</comment>
  </data>
</root>